import { writeFileSync } from 'fs'
import prettier from 'prettier'

async function main() {
  const [data, meta] = await Promise.all([
    fetch(
      'https://publish-01.obsidian.md/cache/f76a4d19d8a78c1ffd03a5a5ca4ae423',
    ).then((res) => res.json()),
    fetch(
      'https://publish-01.obsidian.md/options/f76a4d19d8a78c1ffd03a5a5ca4ae423',
    ).then((res) => res.json()),
  ])

  const { navigationHiddenItems } = meta
  const allNoteNames = Object.keys(data)
  const visibleNoteNames = allNoteNames.filter(
    // Filter out Images/headshot.jpeg if navigationHiddenItems: ["Images"]
    // NOTE: This can easily break.
    (name) => !navigationHiddenItems.includes(name.split('/')[0]),
  )

  const notes = visibleNoteNames.map((name) => ({
    updatedAt: data[name].frontmatter.updated,
    name: name.replace(/\.md$/, ''),
    // Obsidian Publish just replaces spaces with +
    // @ref https://forum.obsidian.md/t/publish-support-for-lowercase-and-kebab-case-slugs-in-urls/32463
    href: 'https://mxstbr.com/notes/' + nameToSlug(name),
  }))

  const prettierConfig = await prettier.resolveConfig('app/data/notes.tsx')

  writeFileSync(
    'app/data/notes.tsx',
    await prettier.format(
      `// AUTO-GENERATED BY update-notes.ts\n\nexport const notes = ${JSON.stringify(notes.sort((a, b) => a.name.localeCompare(b.name)))};`,
      {
        ...prettierConfig,
        filepath: 'app/data/notes.tsx',
      },
    ),
  )
}

main()

function nameToSlug(name: string) {
  return name.replace(/\s+/g, '+').replace(/\.md$/, '')
}
